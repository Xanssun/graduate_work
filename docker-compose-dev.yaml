x-common:
  &common
    networks:
      - custom

version: '3.0'
services:

  kino_db:
    <<: *common
    image: postgres:13.4
    container_name: "kino_db"
    expose:
      - ${KINO_DB_PORT}
    env_file:
      - envs/common.env
    # environment:
    #   POSTGRES_DB: ${KINO_DB_NAME}
    #   POSTGRES_USER: ${KINO_DB_USER}
    #   POSTGRES_PASSWORD: ${KINO_DB_PASSWORD}
    volumes:
      - kino_postgres_data:/var/lib/postgresql/data

  kino_service:
    <<: *common
    image: "kino_service"
    build: ./cinema_together
    container_name: cinema_together
    depends_on:
      - kino_db
    env_file:
      - envs/common.env
    ports:
      - ${KINO_API_PORT}:${KINO_API_PORT}

  postgres_db:
    <<: *common
    image: postgres:13.4
    container_name: postgres_db
    env_file:
      - envs/common.env
    volumes:
      - auth_postgres_data:/var/lib/postgresql/data
      - ./init-databases:/docker-entrypoint-initdb.d
    ports:
      - ${AUTH_DB_PORT}:${AUTH_DB_PORT}
    expose:
      - ${AUTH_DB_PORT}

  nginx:
    <<: *common
    image: nginx:1.19.2
    container_name: "nginx"
    volumes:
      - ./configs/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./configs/nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - auth_service
      - jaeger
    ports:
      - ${NGINX_PORT}:${NGINX_PORT}

  auth_service:
    <<: *common
    image: "auth_service"
    build: ./auth_service
    container_name: auth_service
    depends_on:
      - postgres_db
    env_file:
      - envs/common.env
    ports:
      - ${AUTH_API_PORT}:${AUTH_API_PORT}
    expose:
      - ${AUTH_API_PORT}

  jaeger:
    <<: *common
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    env_file:
      - envs/common.env
    ports:
      - "${JAEGER_PORT}:${JAEGER_PORT}/udp"
      - ${JAEGER_PORT_2}:${JAEGER_PORT_2}

  redis:
    <<: *common
    image: redis:7.2
    container_name: redis
    restart: always
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    expose:
      - ${REDIS_PORT}

networks:
  custom:
    name: custom

volumes:
  kino_postgres_data:
  auth_postgres_data: